<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/security  
    http://www.springframework.org/schema/security/spring-security.xsd">
	<http auto-config="true">
		<form-login login-page="/login"
			login-processing-url="/login" username-parameter="j_username"
			password-parameter="j_password" default-target-url="/customer/list/" />
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/errorpage" access="permitAll" />
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/register" access="permitAll" />
		<intercept-url pattern="/customer/*"
			access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/company/*"
			access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/vendors/*"
			access="hasRole('ROLE_ADMIN')" />		
		<logout invalidate-session="true" logout-url="/logout"
			logout-success-url="/login?logout=true" />
		<csrf disabled="true" />
	</http>
	
	<!-- <beans:alias name="filterChainProxy" alias="springSecurityFilterChain" /> 
	 <beans:bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy">
		<filter-chain-map>
			<filter-chain pattern="/images/*" filters="none" />
			<filter-chain pattern="/**"
				filters="logoutFilter, formLoginFilter, exceptionTranslationFilter, filterSecurityInterceptor" />
		</filter-chain-map>
	</beans:bean>
	<beans:bean id="logoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
	    <beans:constructor-arg value="/login?logout=true" />
	    <beans:constructor-arg>
	        <beans:list><beans:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
	        </beans:list>
	    </beans:constructor-arg>
	</beans:bean>
	<beans:bean id="formLoginFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
		<beans:property name="usernameParameter" value="j_username" />
		<beans:property name="passwordParameter" value="j_password" />
		<beans:property name="authenticationSuccessHandler">
			<beans:bean
				class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
				<beans:property name="defaultTargetUrl" value="/customer/list" />
			</beans:bean>
		</beans:property>
		<beans:property name="sessionAuthenticationStrategy">
			<beans:bean	class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy" />
		</beans:property>
	</beans:bean>
	<beans:bean id="exceptionTranslationFilter" class="org.springframework.security.web.access.ExceptionTranslationFilter">
	 	<beans:constructor-arg name="authenticationEntryPoint" ref="loginUrlAuthenticationEntryPoint"/>
	</beans:bean>
	
	<beans:bean id="loginUrlAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:constructor-arg name="loginFormUrl"
			value="/login" />
	</beans:bean>

	<beans:bean id="authenticationManager"
		class="org.springframework.security.authentication.ProviderManager">
		<beans:constructor-arg>
			<beans:list>
				<beans:ref bean="customAuthenticationProvider" />
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>
	<beans:bean id="authenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService"
			ref="userdetailservice" />
	</beans:bean>
	<beans:bean id="securityContextFilter" class="org.springframework.security.web.context.SecurityContextPersistenceFilter" >
    	<beans:constructor-arg name="securityContextRepository" ref="securityContextRepository" />
	</beans:bean>

	<beans:bean id="securityContextRepository" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository" />
	<beans:bean id="servletApiFilter" class="org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter" />
	<beans:bean id="requestCacheFilter" class="org.springframework.security.web.savedrequest.RequestCacheAwareFilter" />
	<beans:bean id="sessionMgmtFilter" class="org.springframework.security.web.session.SessionManagementFilter" >
    	<beans:constructor-arg ref="securityContextRepository" />
	</beans:bean>
	
	 <beans:bean id="anonymousProvider" class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
        <beans:property name="key" value="SomeUniqueKeyForThisApplication" />
        <beans:property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS" />
    </beans:bean>
	 <beans:bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
    <beans:property name="securityMetadataSource">
        <filter-security-metadata-source>
           <intercept-url pattern="/" access="permitAll" />
			<intercept-url pattern="/login" access="permitAll" />
			<intercept-url pattern="/register" access="permitAll" />
			<intercept-url pattern="/customer/*" access="hasRole('ROLE_ADMIN')" />
        </filter-security-metadata-source>
    </beans:property>
	    <beans:property name="authenticationManager" ref="authenticationManager" />
	    <beans:property name="accessDecisionManager" ref="accessDecisionManager" />
	</beans:bean>
	 <beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:constructor-arg name="decisionVoters">
            <beans:list>
                <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
                <beans:bean class="org.springframework.security.access.vote.RoleVoter" />
                <beans:bean class="org.springframework.security.web.access.expression.WebExpressionVoter" />           
            </beans:list>
        </beans:constructor-arg>
    </beans:bean>  -->
	<global-method-security pre-post-annotations="enabled" secured-annotations="enabled" />
	<authentication-manager>
		<authentication-provider ref="customAuthenticationProvider">
			<!-- <password-encoder ref="passwordEncoder"></password-encoder> -->
		</authentication-provider>
	</authentication-manager>
	<beans:bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</beans:bean>
	<beans:bean id="customAuthenticationProvider"
		class="com.deep.spring.dao.CustomAuthenticationProvider">
	</beans:bean>
</beans:beans>